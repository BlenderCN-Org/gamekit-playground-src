# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# HAVE_GLIBC_STRERROR_R
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HAVE_GLIBC_STRERROR_R to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_GLIBC_STRERROR_R_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMake/CurlTests.c
# Executable    : /home/ttrocha/_dev/extprojects/_build/ogrekit-bb10/CMakeFiles/cmTryCompileExec3219166208-HAVE_GLIBC_STRERROR_R
# Run arguments : 
#    Called from: [1]	/home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMakeLists.txt

#SET( HAVE_GLIBC_STRERROR_R 
#     "PLEASE_FILL_OUT-FAILED_TO_RUN"
#     CACHE STRING "Result from TRY_RUN" FORCE)

#SET( HAVE_GLIBC_STRERROR_R__TRYRUN_OUTPUT 
#     "PLEASE_FILL_OUT-NOTFOUND"
#     CACHE STRING "Output from TRY_RUN" FORCE)


# HAVE_POSIX_STRERROR_R
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HAVE_POSIX_STRERROR_R to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HAVE_POSIX_STRERROR_R__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HAVE_POSIX_STRERROR_R__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_POSIX_STRERROR_R_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMake/CurlTests.c
# Executable    : /home/ttrocha/_dev/extprojects/_build/ogrekit-bb10/CMakeFiles/cmTryCompileExec463518754-HAVE_POSIX_STRERROR_R
# Run arguments : 
#    Called from: [1]	/home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMakeLists.txt

SET( HAVE_POSIX_STRERROR_R 1 
     )

SET( HAVE_POSIX_STRERROR_R__TRYRUN_OUTPUT 
     "fortuna"
     )


# HAVE_POLL_FINE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HAVE_POLL_FINE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HAVE_POLL_FINE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HAVE_POLL_FINE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_POLL_FINE_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/ttrocha/_dev/extprojects/_build/ogrekit-bb10/CMakeFiles/CMakeTmp/src.c
# Executable    : /home/ttrocha/_dev/extprojects/_build/ogrekit-bb10/CMakeFiles/cmTryCompileExec3807499331-HAVE_POLL_FINE
# Run arguments : 
#    Called from: [2]	/home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMake/OtherTests.cmake
#                 [1]	/home/ttrocha/_dev/extprojects/gamekit-dev/Dependencies/Source/libcurl/CMakeLists.txt

SET( HAVE_POLL_FINE 1
     )

SET( HAVE_POLL_FINE__TRYRUN_OUTPUT 
     "duesseldorf"
     )

